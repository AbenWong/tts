<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>人力资源数据看板</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --accent: #2ecc71;
            --warning: #e74c3c;
            --light-bg: #f5f7fa;
            --card-bg: #ffffff;
            --text-primary: #2c3e50;
            --text-secondary: #7f8c8d;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }
        
        body {
            background-color: var(--light-bg);
            color: var(--text-primary);
            padding: 20px;
        }
        
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
            padding-bottom: 16px;
            border-bottom: 1px solid #e0e0e0;
        }
        
        .dashboard-title {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary);
        }
        
        .date-filter {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 20px;
            margin-bottom: 24px;
        }
        
        .stat-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            display: flex;
            flex-direction: column;
        }
        
        .stat-card__title {
            font-size: 14px;
            color: var(--text-secondary);
            margin-bottom: 12px;
        }
        
        .stat-card__value {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
        }
        
        .stat-card__change {
            font-size: 14px;
            display: flex;
            align-items: center;
        }
        
        .change-positive {
            color: var(--accent);
        }
        
        .change-negative {
            color: var(--warning);
        }
        
        .charts-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
            gap: 24px;
            margin-bottom: 24px;
        }
        
        .chart-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 24px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .chart-title {
            font-size: 18px;
            font-weight: 500;
        }
        
        .chart-actions {
            display: flex;
            gap: 12px;
        }
        
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
        
        .double-column {
            grid-column: span 2;
        }
        
        @media (max-width: 1200px) {
            .charts-container {
                grid-template-columns: 1fr;
            }
            
            .double-column {
                grid-column: span 1;
            }
        }
        
        .filter-btn, .export-btn {
            padding: 8px 16px;
            border-radius: 6px;
            border: 1px solid #e0e0e0;
            background: white;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .filter-btn:hover, .export-btn:hover {
            background: #f5f5f5;
        }
        
        select {
            padding: 8px 12px;
            border-radius: 6px;
            border: 1px solid #e0e0e0;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <h1 class="dashboard-title">人力资源数据看板</h1>
        <div class="date-filter">
            <select id="timeRange">
                <option value="month">本月</option>
                <option value="quarter">本季度</option>
                <option value="year" selected>本年</option>
            </select>
            <button class="filter-btn">筛选</button>
            <button class="export-btn">导出报告</button>
        </div>
    </div>
    
    <div class="stats-cards">
        <div class="stat-card">
            <div class="stat-card__title">总员工数</div>
            <div class="stat-card__value">1,243</div>
            <div class="stat-card__change change-positive">+5.2% 同比增长</div>
        </div>
        <div class="stat-card">
            <div class="stat-card__title">正编人员</div>
            <div class="stat-card__value">856</div>
            <div class="stat-card__change change-positive">+3.7% 同比增长</div>
        </div>
        <div class="stat-card">
            <div class="stat-card__title">外包人员</div>
            <div class="stat-card__value">387</div>
            <div class="stat-card__change change-positive">+8.9% 同比增长</div>
        </div>
        <div class="stat-card">
            <div class="stat-card__title">离职率</div>
            <div class="stat-card__value">4.2%</div>
            <div class="stat-card__change change-negative">+0.7% 同比增长</div>
        </div>
    </div>
    
    <div class="charts-container">
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">人员构成分布</h3>
            </div>
            <div class="chart-container">
                <canvas id="employeeTypeChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">正编人员性别比例</h3>
            </div>
            <div class="chart-container">
                <canvas id="genderRatioChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">外包人员部门分布</h3>
            </div>
            <div class="chart-container">
                <canvas id="outsourceDeptChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">正编人员城市分布</h3>
            </div>
            <div class="chart-container">
                <canvas id="cityDistributionChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">正编人员职级分布</h3>
            </div>
            <div class="chart-container">
                <canvas id="levelDistributionChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">入职离职对比</h3>
            </div>
            <div class="chart-container">
                <canvas id="hireLeaveChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card double-column">
            <div class="chart-header">
                <h3 class="chart-title">部门人员组成分析</h3>
            </div>
            <div class="chart-container">
                <canvas id="deptCompositionChart"></canvas>
            </div>
        </div>
    </div>

    <script>
        // 模拟数据
        const data = {
            employeeType: {
                labels: ['正编人员', '外包人员'],
                values: [856, 387],
                colors: ['#3498db', '#2ecc71']
            },
            genderRatio: {
                labels: ['男性', '女性'],
                values: [512, 344],
                colors: ['#3498db', '#e74c3c']
            },
            outsourceDept: {
                labels: ['A部门', 'B部门'],
                values: [243, 144],
                colors: ['#3498db', '#2ecc71']
            },
            cityDistribution: {
                labels: ['北京', '上海', '广州', '深圳', '杭州', '其他'],
                values: [312, 278, 98, 87, 45, 36],
                colors: ['#3498db', '#2ecc71', '#e74c3c', '#f39c12', '#9b59b6', '#34495e']
            },
            levelDistribution: {
                labels: ['P1', 'P2', 'P3', 'P4', 'P5', 'P6+'],
                values: [123, 256, 287, 112, 56, 22],
                colors: ['#3498db', '#2ecc71', '#e74c3c', '#f39c12', '#9b59b6', '#34495e']
            },
            hireLeave: {
                labels: ['Q1', 'Q2', 'Q3', 'Q4'],
                hire: [45, 62, 38, 51],
                leave: [18, 22, 35, 28]
            },
            deptComposition: {
                labels: ['技术部', '市场部', '销售部', '人力资源', '财务部', '运营部'],
                regular: [256, 87, 143, 45, 38, 87],
               外包: [123, 45, 98, 22, 18, 81]
            }
        };

        // 初始化图表
        document.addEventListener('DOMContentLoaded', function() {
            // 人员构成饼图
            new Chart(document.getElementById('employeeTypeChart'), {
                type: 'doughnut',
                data: {
                    labels: data.employeeType.labels,
                    datasets: [{
                        data: data.employeeType.values,
                        backgroundColor: data.employeeType.colors,
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const value = context.raw;
                                    const percentage = Math.round((value / total) * 100);
                                    return `${context.label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });

            // 性别比例饼图
            new Chart(document.getElementById('genderRatioChart'), {
                type: 'pie',
                data: {
                    labels: data.genderRatio.labels,
                    datasets: [{
                        data: data.genderRatio.values,
                        backgroundColor: data.genderRatio.colors,
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });

            // 外包部门分布
            new Chart(document.getElementById('outsourceDeptChart'), {
                type: 'pie',
                data: {
                    labels: data.outsourceDept.labels,
                    datasets: [{
                        data: data.outsourceDept.values,
                        backgroundColor: data.outsourceDept.colors,
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });

            // 城市分布水平条形图
            new Chart(document.getElementById('cityDistributionChart'), {
                type: 'bar',
                data: {
                    labels: data.cityDistribution.labels,
                    datasets: [{
                        label: '人数',
                        data: data.cityDistribution.values,
                        backgroundColor: data.cityDistribution.colors,
                        borderWidth: 0
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });

            // 职级分布条形图
            new Chart(document.getElementById('levelDistributionChart'), {
                type: 'bar',
                data: {
                    labels: data.levelDistribution.labels,
                    datasets: [{
                        label: '人数',
                        data: data.levelDistribution.values,
                        backgroundColor: data.levelDistribution.colors,
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });

            // 入职离职对比折线图
            new Chart(document.getElementById('hireLeaveChart'), {
                type: 'line',
                data: {
                    labels: data.hireLeave.labels,
                    datasets: [
                        {
                            label: '入职人数',
                            data: data.hireLeave.hire,
                            borderColor: '#2ecc71',
                            backgroundColor: 'rgba(46, 204, 113, 0.1)',
                            fill: true,
                            tension: 0.3
                        },
                        {
                            label: '离职人数',
                            data: data.hireLeave.leave,
                            borderColor: '#e74c3c',
                            backgroundColor: 'rgba(231, 76, 60, 0.1)',
                            fill: true,
                            tension: 0.3
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // 部门人员组成堆叠条形图
            new Chart(document.getElementById('deptCompositionChart'), {
                type: 'bar',
                data: {
                    labels: data.deptComposition.labels,
                    datasets: [
                        {
                            label: '正编人员',
                            data: data.deptComposition.regular,
                            backgroundColor: '#3498db',
                            borderWidth: 0
                        },
                        {
                            label: '外包人员',
                            data: data.deptComposition.外包,
                            backgroundColor: '#2ecc71',
                            borderWidth: 0
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        x: {
                            stacked: true
                        },
                        y: {
                            stacked: true
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>